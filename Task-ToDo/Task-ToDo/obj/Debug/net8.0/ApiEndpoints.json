[
  {
    "ContainingType": "Task_ToDo.Controllers.login_RegistarController1",
    "Method": "Register_NewUser",
    "RelativePath": "api/login_RegistarController1",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "Task_ToDo.models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Task_ToDo.models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Task_ToDo.Controllers.login_RegistarController1",
    "Method": "Edit_user",
    "RelativePath": "api/login_RegistarController1/{username},{password}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "password",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "user",
        "Type": "Task_ToDo.models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Task_ToDo.models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Task_ToDo.Controllers.login_RegistarController1",
    "Method": "Delete_User",
    "RelativePath": "api/login_RegistarController1/{username},{password}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "password",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Task_ToDo.models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Task_ToDo.Controllers.login_RegistarController1",
    "Method": "Get",
    "RelativePath": "api/login_RegistarController1/Login",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "UserPass",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Task_ToDo.models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Task_ToDo.Controllers.TaskEditorController",
    "Method": "Index",
    "RelativePath": "api/TaskEditor",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Task_ToDo.models.ToDoTask, Task-ToDo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Task_ToDo.Controllers.TaskEditorController",
    "Method": "Put",
    "RelativePath": "api/TaskEditor/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "value",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Task_ToDo.Controllers.TaskEditorController",
    "Method": "Delete_User",
    "RelativePath": "api/TaskEditor/{id},{NameOfTask}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "NameOfTask",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Task_ToDo.models.ToDoTask",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Task_ToDo.Controllers.TaskEditorController",
    "Method": "Create",
    "RelativePath": "api/TaskEditor/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userid",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "title",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "description",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_ToDo.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Task_ToDo.WeatherForecast, Task-ToDo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]